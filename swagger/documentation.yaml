openapi: "3.0.3"
info:
  title: "ScheduleApp"
  description: "API connected to ScheduleApp"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080"
paths:
  /signUp:
    post:
      description: "Registers a new user"
      requestBody:
        description: "A JSON object that contains user registration details"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpParams"
      responses:
        "201":
          description: "User successfully registered"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                success:
                  value: "User registered successfully"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                missing:
                  value: "Invalid or missing parameters"

  /login:
    post:
      description: "Logs in a user"
      requestBody:
        description: "A JSON object that contains user login credentials"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInParams"
      responses:
        "200":
          description: "User successfully logged in"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                success:
                  value: "Login successful"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                missing:
                  value: "Invalid or missing parameters"

  /subjects:
    get:
      description: "Fetches a list of all subjects with their schedule"
      responses:
        "200":
          description: "Successfully retrieved the list of subjects"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubjectResponse"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                error:
                  value: "An error occurred while fetching subjects"

components:
  schemas:
    SignUpParams:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: "The user's name"
        email:
          type: string
          description: "The user's email address"
        password:
          type: string
          description: "The user's password"
    SignInParams:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: "The user's email address"
        password:
          type: string
          description: "The user's password"
    Subject:
      type: object
      properties:
        id:
          type: integer
          description: "The unique ID of the subject"
        name:
          type: string
          description: "The name of the subject"
        dayOfWeek:
          type: integer
          description: "The day of the week (1 for Monday, 7 for Sunday)"
        startTime:
          type: string
          format: time
          description: "The start time of the subject (HH:mm:ss)"
        endTime:
          type: string
          format: time
          description: "The end time of the subject (HH:mm:ss)"
        classRoom:
          type: integer
          description: "The classroom number"
        isLecture:
          type: boolean
          description: "Whether the subject is a lecture"
        teacherId:
          type: integer
          description: "The ID of the teacher"
        groupId:
          type: integer
          description: "The ID of the group"
    SubjectResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Subject"
        errorMessage:
          type: string
          nullable: true
          description: "An error message, if any"
